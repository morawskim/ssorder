stages:
  - commit
  - prepare
  - qa
  - build
  - testing
  - security
  - deploy

services:
  - mysql:5.6

variables:
  MYSQL_ROOT_PASSWORD: "rootpassword"
  MYSQL_USER: ssorder
  MYSQL_PASSWORD: ssorderpassword
  MYSQL_DATABASE: ssorder

commit-message:
  stage: commit
  image: ruby:2.6-alpine
  script:
    - ruby -e "exit 1 unless '$CI_COMMIT_TITLE' =~ /^#\d+ [a-zA-Z]+/"

branch-name:
  stage: commit
  image: ruby:2.6-alpine
  script:
    - ruby -e "exit 1 unless '$CI_COMMIT_REF_NAME' =~ /^master|develop$/ || '$CI_COMMIT_REF_NAME' =~ /^hotfix-|release-\d+\.\d+\.\d+$/ || '$CI_COMMIT_REF_NAME' =~ /^feature-\d+$/"
  only:
    - branches

composer:
  stage: prepare
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
  artifacts:
    paths:
      - vendor/
    expire_in: 30 days
    when: on_success
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - /home/php/.composer/cache

yarn:
  stage: prepare
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - yarn -v
    - cd frontend && yarn install --frozen-lock-file
  artifacts:
    paths:
      - frontend/node_modules/
    expire_in: 5 days
    when: on_success
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - /home/php/.cache/yarn/v1

codestyle:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - ./vendor/bin/phpcs --report=junit --extensions=php | tee phpcs-report.xml
  dependencies:
    - composer
  artifacts:
    when: on_failure
    reports:
      junit: phpcs-report.xml

phpmd:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - ./vendor/bin/phpmd --ignore-violations-on-exit ./frontend/,./common/,./console/ text cleancode,codesize,controversial,design,naming,unusedcode
  dependencies:
    - composer

phploc:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - ./vendor/bin/phploc ./frontend/ ./common/ ./console/
  dependencies:
    - composer

phpcpd:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - ./vendor/bin/phpcpd --exclude=views/ --progress ./frontend/ ./common/ ./console/
  dependencies:
    - composer

php-lint:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - ./vendor/bin/parallel-lint --exclude vendor/ .
  dependencies:
    - composer

phpstan-deprecation-rules:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.1
  script:
    - composer global require  phpstan/phpstan-deprecation-rules
    - ~/.composer/vendor/bin/phpstan analyse --no-progress --no-interaction ./frontend ./common ./console
  dependencies:
    - composer

phpcf:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - ./vendor/bin/phpcf --target 7.2 ./frontend/ console/ ./common/
  dependencies:
    - composer

assets:
  stage: build
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - cd frontend && yarn build
  dependencies:
    - yarn
  artifacts:
    paths:
      - frontend/web/assets/build
    expire_in: 30 days
    when: on_success

pretier:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - cd frontend && ./node_modules/.bin/prettier --check './webpack/**'
  dependencies:
    - yarn

stylelint:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - cd frontend && ./node_modules/.bin/stylelint ./webpack
  dependencies:
    - yarn

eslint:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - cd frontend && ./node_modules/.bin/eslint ./webpack
  dependencies:
    - yarn

hadolint:
  stage: qa
  image: hadolint/hadolint:v1.16.3-debian
  script:
    - hadolint frontend/Dockerfile
    - find -iname 'Dockerfile*' | xargs --max-lines=1 hadolint
  dependencies: []
  only:
    changes:
      - frontend/Dockerfile

security-checker:
  stage: security
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  script:
    - ./vendor/bin/security-checker security:check ./composer.lock --format text
  allow_failure: true
  dependencies:
    - composer

codeception:
  stage: testing
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  services:
    - mysql:5.6
  script:
    - ./init --env=CI --overwrite=All
    - ./yii migrate/up --interactive 0
    - cd ./common && ../vendor/bin/codecept run unit
    - cd ..
    - cd ./frontend && ../vendor/bin/codecept run unit
  dependencies:
    - composer

.e2e:
  stage: testing
  image: morawskim/node10-google-chrome:74.0.3729.131
  script:
    - cd frontend && npm run e2e

deploy_production:
  stage: deploy
  image: edbizarro/gitlab-ci-pipeline-php:5.6
  environment:
    name: production
    url: https://ssorder.snlb.pl
#  only:
#    - master
  when: manual
  dependencies:
    - composer
    - assets
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    # brak obslugi bledow ssh
    - echo $PROD_SSORDER_PATH
    - ssh -p22 sensilabs@192.168.15.22 "rm -rf ${PROD_SSORDER_PATH}/vendor"
    - ssh -p22 sensilabs@192.168.15.22 "rm -rf ${PROD_SSORDER_PATH}/frontend/web/assets/build"
    - scp -P22 -r ./vendor sensilabs@192.168.15.22:${PROD_SSORDER_PATH}/
    - scp -P22 -r ./frontend/web/assets/build sensilabs@192.168.15.22:${PROD_SSORDER_PATH}/frontend/web/assets/
    - ssh -p22 sensilabs@192.168.15.22 "cd ${PROD_SSORDER_PATH}/ && git fetch origin && git checkout $CI_COMMIT_SHA"
    - ssh -p22 sensilabs@192.168.15.22 "cd ${PROD_SSORDER_PATH}/vendor && ln -s ./bower-asset/ ./bower"
    - ssh -p22 sensilabs@192.168.15.22 "cd ${PROD_SSORDER_PATH} && ./yii migrate/up --interactive 0"
    - >
      curl -X POST -H 'Content-Type: application/json' --data '{"text":"Nowa wersja ssorder!"}' https://chat.sensilabs.pl/hooks/$PROD_ROCKET_CHAT_NOTIFY_TOKEN
